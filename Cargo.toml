[package]
name = "enhanced-pbft"
version = "0.2.0"
edition = "2021"
authors = ["Enterprise Consensus Team"]
description = "Enhanced PBFT consensus implementation with modern security features"
license = "Apache-2.0"
repository = "https://github.com/enterprise/enhanced-pbft"

[dependencies]
# Async runtime
tokio = { version = "1.28", features = [
    "full",
    "sync",
    "time",
    "macros",
    "rt-multi-thread",
    "net",
] }
futures = "0.3"

# Cryptography
ring = "0.16"
ed25519-dalek = "1.0"
x25519-dalek = "1.2"
chacha20poly1305 = "0.10"
blake3 = "1.3"
subtle = "2.4"

# Networking
quinn = "0.10"        # QUIC protocol implementation
rustls = "0.21"       # TLS implementation
webpki = "0.22"       # PKI utilities

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
bincode = "1.3"
postcard = { version = "1.0", features = ["alloc"] }

# Consensus utilities
parking_lot = { version = "0.12", features = ["send_guard"] }
dashmap = "5.4"       # Thread-safe maps
im = "15.1"          # Immutable data structures
bytes = "1.4"        # Efficient byte handling
uuid = { version = "1.3", features = ["v4", "serde"] }

# Error handling
thiserror = "1.0"
anyhow = "1.0"

# Logging and metrics
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
metrics = "0.21"
metrics-exporter-prometheus = "0.12"

# State management
rocksdb = { version = "0.20", optional = true }
sled = { version = "0.34", optional = true }

[dev-dependencies]
# Testing
proptest = "1.2"
criterion = "0.4"
quickcheck = "1.0"
tokio-test = "0.4"
test-log = "0.2"
fake = { version = "2.5", features = ["derive"] }

# Benchmarking
pprof = { version = "0.11", features = ["flamegraph"] }
criterion-plot = "0.5"

[features]
default = ["persistence", "metrics", "network-tls"]

# Core features
persistence = ["rocksdb"]
metrics = ["metrics-exporter-prometheus"]
network-tls = ["rustls", "webpki"]

# Enhanced PBFT features
fast-path = []           # Optimistic execution path
pipeline = []           # Pipelined consensus
checkpoint = []         # State checkpointing
dag = []               # DAG-based consensus
recovery = []          # State recovery

# Security features
sgx = []               # Intel SGX support
advanced-crypto = ["ed25519-dalek", "x25519-dalek"]
constant-time = []     # Constant-time operations

# Storage backends
rocks-storage = ["rocksdb"]
sled-storage = ["sled"]

[profile.release]
lto = true
codegen-units = 1
panic = "abort"
opt-level = 3
debug = false

[profile.production]
inherits = "release"
debug = false
strip = true
lto = true
codegen-units = 1
incremental = false

[profile.bench]
debug = true
debug-assertions = false
opt-level = 3
lto = true

[[bench]]
name = "consensus"
harness = false
path = "benches/consensus.rs"

[[bench]]
name = "crypto"
harness = false
path = "benches/crypto.rs"

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[workspace]
members = [
    "enhanced-pbft-core",
    "enhanced-pbft-network",
    "enhanced-pbft-crypto",
    "enhanced-pbft-storage",
]

[patch.crates-io]
# Use our forked version with security patches
ring = { git = "https://github.com/enterprise/ring", branch = "security-patches" }
